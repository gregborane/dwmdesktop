#########################
#	Shadows		#
#########################	

# Default: false
shadow = false;

#########################
#	Fadding		#
#########################

# Default: false
fading = false;

#########################
# 	Opacity		#
#########################

# Default: 1.0 (disabled)
frame-opacity = 1.0;

#################################
#	Rounded Corners		#
#################################

# Default: 0 (disabled)
corner-radius = 0

#################
#     Blur 	#
#################

blur-method = "dual_kawase"
blur-size = 5
blur-strength = 5


rules: ({
  match = "class_g = 'Alacritty'";
  blur-background = true;
}, {
  match = "class_g != 'Alacritty'";
  blur-background = false;
})

#################################
#       General Settings        #
#################################

# Specify the backend to use: `xrender`, `glx`, or `egl`.
#
# Default: "xrender"
backend = "glx"

# Use higher precision during rendering, and apply dither when presenting the
# rendered screen. Reduces banding artifacts, but may cause performance
# degradation. Only works with OpenGL.
dithered-present = false;

# Enable/disable VSync.
#
# Default: false
vsync = true;

# Try to detect windows with rounded corners and don't consider them
# shaped windows. The accuracy is not very high, unfortunately.
#
# Has nothing to do with `corner-radius`.
#
# Default: false
detect-rounded-corners = false;

# Detect '_NET_WM_WINDOW_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_WINDOW_OPACITY' of client windows to frame windows.
#
# Default: false
detect-client-opacity = true;

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows
# in the same group focused at the same time.
#
# Default: false
detect-transient = true;

# Use of damage information for rendering. This cause the only the part of the
# screen that has actually changed to be redrawn, instead of the whole screen
# every time. Should improve performance.
#
# Default: false
use-damage = true;


